{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAc/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGtCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAExBA,EAAM,G,EAhBA,CACXO,YAAaC,SAASC,cAAc,SACpCC,SAAUF,SAASC,cAAc,SAASE,mBAqBvCJ,YAAYK,iBAAiB,UAElC,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,OAAOC,SAASlB,MAAMmB,OAC/C,MAAMC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAE3BxB,EAAcwB,EAAGP,GAAOQ,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MAC1CJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAC9D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MACpBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAG5De,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst refs = {\n  promiseForm: document.querySelector('.form'),\n  startBtn: document.querySelector('.form').lastElementChild,\n}\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n      resolve({ position, delay })\n      }   else {\n    reject({ position, delay })\n      }\n    }, delay);\n  })\n\n  return promise;\n\n}\n\nrefs.promiseForm.addEventListener('submit', onstartBtnSubmit);\n\nfunction onstartBtnSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  \n  for (let i = 1; i <= amount; i++) {\n\n    createPromise(i, delay).then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n    delay += step;\n  }    \n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","promiseForm","document","querySelector","startBtn","lastElementChild","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.396d4add.js.map"}